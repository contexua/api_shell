openapi: 3.0.0
info:
  title: Accounts API
  description: API for user account management
  version: "1.0"
servers:
  - url: http://localhost:3000
    description: Local development server
paths:

  /users/{userId}:
    get:
      summary: Get a user by ID
      tags: [Users]
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns a user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          $ref: '#/components/responses/UserNotFound'
    put:
      summary: Update a user by ID
      tags: [Users]
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/InvalidRequest'
        '404':
          $ref: '#/components/responses/UserNotFound'

  /accounts/{userId}:
    get:
      summary: Get user account details
      tags:
        - Accounts
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: Unique identifier of the user
      responses:
        '200':
          description: Successful response with user account details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    put:
      summary: Update user account details
      tags:
        - Accounts
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: Unique identifier of the user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Successfully updated user account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
        '400':
          description: Invalid request parameters
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the user
        name:
          type: string
          description: Name of the user
        email:
          type: string
          description: Email address of the user
        userType:
          type: string
          description: Type of user account
      required:
        - id
        - name
